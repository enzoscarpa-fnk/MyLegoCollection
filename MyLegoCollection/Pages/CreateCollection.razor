@page "/create-collection"
@using System.Text.Json
@using MyLegoCollection.Models
@inject CollectionService CollectionService
@inject NavigationManager Navigation

<h3>Create a New LEGO Collection</h3>

<!-- Input field for entering the collection name -->
<div>
    <label for="collectionName">Collection Name: </label>
    <input @bind="collectionName" placeholder="Enter collection name" />
</div>

<button class="btn btn-primary" @onclick="CreateNewCollection">Create</button><br/>

<!-- Display a success message when a collection is created -->
@if (!string.IsNullOrEmpty(successMessage))
{
    <p style="color: green;">@successMessage</p>
}

@code {
    // Event callback to notify parent components when a collection is created
    [Parameter] public EventCallback<LegoCollection> OnCollectionCreated { get; set; }
    
    private string collectionName = ""; // Stores the user input for the collection name
    private string successMessage = ""; // Stores the success message after creation

    private async Task CreateNewCollection()
    {
        // Ensure the collection name is not empty or whitespace
        if (!string.IsNullOrWhiteSpace(collectionName))
        {
            // Add a new collection using the CollectionService
            await CollectionService.AddCollection(new LegoCollection { Name = collectionName, Sets = new List<LegoSet>() });

            // Display success message
            successMessage = $"Collection '{collectionName}' created!";
            
            // Reset the input field
            collectionName = "";
            
            // Notify the parent component that a new collection has been created
            await OnCollectionCreated.InvokeAsync();
        }
    }
}