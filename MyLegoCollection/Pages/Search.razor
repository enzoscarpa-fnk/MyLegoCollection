@page "/search"
@using MyLegoCollection.Models
@inject RebrickableService RebrickableService

<h3>Search LEGO sets</h3>

<input @bind="searchQuery" placeholder="Search for a LEGO set..." />
<button @onclick="SearchSets">Search</button>

@if (sets == null)
{
    <p>Loading sets...</p>
}
else if (!sets.Any())
{
    <p>Sets not found.</p>
}
else
{
    <ul>
        @foreach (var set in sets)
        {
            <li>
                <strong>@set.Name</strong> (@set.Year) - @set.NumParts pieces
                <br />
                <img src="@set.SetImgUrl" alt="@set.Name" width="100" />
            </li>
        }
    </ul>
}

@code {
    private List<LegoSet> sets;
    private string searchQuery = "";

    protected override async Task OnInitializedAsync()
    {
        sets = await RebrickableService.GetSetsAsync();
    }

    private async Task SearchSets()
    {
        if (!string.IsNullOrWhiteSpace(searchQuery))
        {
            sets = await RebrickableService.SearchSetsAsync(searchQuery);
        }
    }
}